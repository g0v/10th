extends /base.pug
block body
  .w-1024.rwd.mx-auto.my-4
    h4 Authentication
    hr
    div
      b Current Status
      p(ld="status") Not login
    div
      b User Name
      p(ld="email") n/a
    div
      b User Id
      p(ld="userid") n/a
    .btn.btn-primary.mr-2(ld="signup not-signed") Sign Up
    .btn.btn-primary.mr-2(ld="login not-signed") Login
    .btn.btn-primary.mr-2(ld="logout signed") Logout
    .btn.btn-primary(ld="reauth") Re-auth
    +scope("signup").ldcv: .base: .inner.p-4
      form(method="POST",action="/api/auth/signup")
        .form-group
          label email
          input.form-control(ld="email",type="text",name="email",autocomplete="username")
        .form-group
          label displayname
          input.form-control(ld="displayname",type="text",name="displayname",autocomplete="displayname")
        .form-group
          label password
          input.form-control(ld="password",type="password",name="password",autocomplete="new-password")
        input(type="hidden",name="_csrf")
        input.btn.btn-primary.mr-2(type="submit")
        .btn.btn-primary(ld="inline-submit") Submit ( no reload )
    +scope("login").ldcv: .base: .inner.p-4
      form(method="POST",action="/api/auth/login")
        .form-group
          label email
          input.form-control(ld="email",type="text",name="email",autocomplete="username")
        .form-group
          label password
          input.form-control(ld="password",type="password",name="password",autocomplete="new-password")
        input(type="hidden",name="_csrf")
        input.btn.btn-primary.mr-2(type="submit")
        .btn.btn-primary(ld="inline-submit") Submit ( no reload )

block script
  +script("/js/dev/auth.js")
  script: :lsc
    lc = {}
    ldcv = {}
    view = {} 
    ldcv.signup = new ldCover root: '[ld-scope=signup]'
    ldcv.login = new ldCover root: '[ld-scope=login]'
    view.signup = new ldView do
      root: '[ld-scope=signup]'
      action: click: do
        "inline-submit": ->
          data = {}
          <[email displayname password]>.map -> data[it]= view.signup.get(it).value
          ld$.fetch "/api/auth/signup", {method: \POST}, {type: \json, json: data}
            .then -> ldcv.signup.toggle false
            .catch -> console.log \failed, it
    view.login = new ldView do
      root: '[ld-scope=login]'
      action: click: do
        "inline-submit": ->
          data = {}
          <[email password]>.map -> data[it] = view.login.get(it).value
          ld$.fetch "/api/auth/login", {method: \POST}, {type: \json, json: data}
            .then -> ldcv.login.toggle false
            .catch -> console.log \failed

    view.panel = new ldView do
      root: document.body
      action: click: do
        signup: -> ldcv.signup.toggle!
        login: -> ldcv.login.toggle!
        logout: ->
          ld$.fetch "/api/auth/logout", {method: "POST"}
            .then -> ld$.fetch \/api/auth/info, {method: \GET}, {type: \json}
            .then -> view.panel.render!
            .catch -> console.log \failed, it
        reauth: ->
      text: do
        username: -> lc.{}user.username or 'n/a'
        userid: -> lc.{}user.key or 'n/a'
      handler: do
        signed: ({node}) -> node.classList.toggle \d-none, !lc.{}user.username
        "not-signed": ({node}) -> node.classList.toggle \d-none, !!lc.{}user.username
        status: ({node}) ->
          node.innerText = if lc.{}user.username => 'Signed in' else 'Not login'
          node.classList.toggle \text-danger, !lc.{}user.username

    ld$.fetch \/api/auth/info, {method: \GET}, {type: \json}
      .then (g = {}) ->
        console.log "global: " g
        ld$.find '[name=_csrf]' .map (f) -> f.value = g.csrfToken
        ld$.fetch.{}headers['X-CSRF-Token'] = g.csrfToken
        lc.global = g
        lc.user = g.user
        view.panel.render!
      .catch -> console.log it
    ldcv.logout = new ldCover do
      root: ld$.find('.ldcv[data-name=logout]',0)

    /*
    a = new auth do
      ui:
        timeout: ->
        authpanel: -> ldcv.login.get!
    a.on \error, -> console.log \error
    a.on \server-down, -> console.log \server-down
    a.on \logout, ->
    a.fetch!then -> console.log it
    a.ensure!
      .then -> console.log ">", it
    */
