// Generated by LiveScript 1.6.0
(function(){
  var fs, path, lderror, http, ws, aux, sdbServer;
  fs = require('fs');
  path = require('path');
  lderror = require('lderror');
  http = require('http');
  ws = require('ws');
  aux = require('@servebase/backend/aux');
  sdbServer = require('@plotdb/ews/sdb-server');
  (function(it){
    return module.exports = it;
  })(function(backend){
    return function(it){
      return it.apply(backend);
    }(function(){
      var db, config, api, app, session, server, wss, sharedb, ref$, sdb, connect;
      db = this.db, config = this.config, api = this.route.api, app = this.app, session = this.session;
      server = http.createServer(app);
      wss = new ws.Server({
        server: server
      });
      sharedb = (ref$ = sdbServer({
        wss: wss,
        app: app,
        io: config.db.postgresql,
        session: session,
        milestoneDb: {
          interval: 200,
          enabled: true
        },
        metadata: function(arg$){
          var m, user, session, collection, id;
          m = arg$.m, user = arg$.user, session = arg$.session, collection = arg$.collection, id = arg$.id;
          return m.user = user.key || 0;
        },
        access: function(arg$){
          var user, session, collection, id, snapshots;
          user = arg$.user, session = arg$.session, collection = arg$.collection, id = arg$.id, snapshots = arg$.snapshots;
          return Promise.resolve();
        }
      }), sdb = ref$.sdb, connect = ref$.connect, wss = ref$.wss, ref$);
      backend.sharedb = sharedb;
      return backend.server = server;
    });
  });
}).call(this);
