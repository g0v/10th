// Generated by LiveScript 1.3.1
var cookieConsent;
cookieConsent = {
  dom: ld$.find(document, '[ld-scope=cookie-consent]', 0),
  val: util.cookie('consent.cookie'),
  clear: function(){
    if (this.dom) {
      ld$.remove(this.dom);
      return this.dom = null;
    }
  },
  check: function(){
    var this$ = this;
    return auth.get().then(function(arg$){
      var user, ref$;
      user = arg$.user;
      if (((ref$ = user.config || (user.config = {})).consent || (ref$.consent = {})).cookie && this$.dom) {
        return this$.clear();
      }
      if (!(this$.val = util.cookie('consent.cookie'))) {
        return;
      }
      if (((ref$ = user.config || (user.config = {})).consent || (ref$.consent = {})).cookie || !user.key) {
        return;
      }
      return ld$.fetch(auth.api + "/me/config", {
        method: 'POST'
      }, {
        json: {
          type: 'consent',
          name: ['cookie']
        }
      }).then(function(ret){
        var ref$;
        ret == null && (ret = {});
        import$(user.config || (user.config = {}), ret);
        return util.cookie('consent.cookie', ((ref$ = ret.config || (ret.config = {})).consent || (ref$.consent = {})).cookie || Date.now(), new Date(Date.now() + 86400000 * 365 * 100).toGMTString());
      })['catch'](function(){});
    });
  },
  init: function(){
    var this$ = this;
    if (!this.val && this.dom) {
      this.dom.classList.remove('d-none');
    } else {
      return;
    }
    return ld$.find(this.dom, '[ld=ok]', 0).addEventListener('click', function(){
      this$.clear();
      return this$.check();
    });
  }
};
cookieConsent.init();
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}